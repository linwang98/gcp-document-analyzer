name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: document-analyzer
  REGION: us-central1

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=venv

    - name: Test with pytest
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Test Docker build
      run: |
        docker build -t test-image .

  deploy:
    name: Deploy to Cloud Run
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to Cloud Run from source
      run: |
        gcloud run deploy $SERVICE_NAME \
          --source . \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10

    - name: Get service URL
      run: |
        URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)')
        echo "ðŸš€ Service deployed at: $URL"
        echo "SERVICE_URL=$URL" >> $GITHUB_ENV

    - name: Test deployment
      run: |
        sleep 30
        curl -f $SERVICE_URL/health || exit 1
        echo "Deployment test passed!"
